name: Tagged Release
# Tags like v1.2.3 get built and uploaded as releases.

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Set environment variables
        run: echo "TARGET=${{ matrix.target }}" >> $GITHUB_ENV

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Run tests
        run: cargo test --release --target ${{ matrix.target }}

      - name: Upload Build Artifact
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: ifstat-rs-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/ifstat-rs${{ matrix.target == 'x86_64-pc-windows-gnu' && '.exe' || '' }}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download Linux Artifact
        uses: actions/download-artifact@v2
        with:
          name: ifstat-rs-x86_64-unknown-linux-gnu
          path: ./linux

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/ifstat-rs
          asset_name: ifstat-rs-linux_x86_64
          asset_content_type: application/octet-stream

      - name: Download macOS Artifact
        continue-on-error: true
        uses: actions/download-artifact@v2
        with:
          name: ifstat-rs-x86_64-apple-darwin
          path: ./macos

      - name: Upload macOS Release Asset
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/ifstat-rs
          asset_name: ifstat-rs-macos-x86_64
          asset_content_type: application/octet-stream

      - name: Download Windows Artifact
        continue-on-error: true
        uses: actions/download-artifact@v2
        with:
          name: ifstat-rs-x86_64-pc-windows-gnu
          path: ./windows

      - name: Upload Windows Release Asset
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/ifstat-rs.exe
          asset_name: ifstat-rs-windows-x86_64.exe
          asset_content_type: application/octet-stream
