name: Build and test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: riscv64gc-unknown-linux-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: archlinux
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-gnu
          - os: windows-latest
            target: aarch64-pc-windows-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install cross
        if: matrix.target != 'x86_64-unknown-linux-gnu' && matrix.target != 'x86_64-apple-darwin' && matrix.target != 'x86_64-pc-windows-gnu'
        run: cargo install cross

      - name: Set environment variables
        run: echo "TARGET=${{ matrix.target }}" >> $GITHUB_ENV

      - name: Show config
        run: cargo tree

      - name: Build with cross
        if: matrix.target != 'x86_64-unknown-linux-gnu' && matrix.target != 'x86_64-apple-darwin' && matrix.target != 'x86_64-pc-windows-gnu'
        run: cross build --release --target ${{ matrix.target }}

      - name: Build with cargo
        if: matrix.target == 'x86_64-unknown-linux-gnu' || matrix.target == 'x86_64-apple-darwin' || matrix.target == 'x86_64-pc-windows-gnu'
        run: cargo build --release --target ${{ matrix.target }}

      - name: Run tests on native architecture
        run: cargo test --release --target ${{ matrix.target }}

      - name: Run program on Linux x86_64
        run: |
          ./target/${{ matrix.target }}/release/ifstat-rs -V
          ./target/${{ matrix.target }}/release/ifstat-rs --version
          ./target/${{ matrix.target }}/release/ifstat-rs -a 0 1
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'x86_64-unknown-linux-gnu'

      - name: Run program on macOS x86_64
        run: |
          ./target/${{ matrix.target }}/release/ifstat-rs -V
          ./target/${{ matrix.target }}/release/ifstat-rs --version
          ./target/${{ matrix.target }}/release/ifstat-rs -a 0 1
        if: matrix.os == 'macos-latest' && matrix.target == 'x86_64-apple-darwin'

      - name: Run program on macOS ARM64
        run: |
          ./target/${{ matrix.target }}/release/ifstat-rs -V
          ./target/${{ matrix.target }}/release/ifstat-rs --version
          ./target/${{ matrix.target }}/release/ifstat-rs -a 0 1
        if: matrix.os == 'macos-latest' && matrix.target == 'aarch64-apple-darwin'

      - name: Run program on Windows x86_64
        run: |
          target\${{ matrix.target }}\release\ifstat-rs.exe -V
          target\${{ matrix.target }}\release\ifstat-rs.exe --version
          target\${{ matrix.target }}\release\ifstat-rs.exe -a 0 1
        if: matrix.os == 'windows-latest' && matrix.target == 'x86_64-pc-windows-gnu'
