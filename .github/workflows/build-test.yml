name: Build and test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Set environment variables
        run: echo "TARGET=${{ matrix.target }}" >> $GITHUB_ENV

      - name: Show config
        run: cargo tree

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Run tests
        run: cargo test --release --target ${{ matrix.target }}

      - name: Run program on Linux
        run: |
          ./target/${{ matrix.target }}/release/ifstat-rs -V
          ./target/${{ matrix.target }}/release/ifstat-rs --version
          ./target/${{ matrix.target }}/release/ifstat-rs -a 0 1
        if: matrix.os == 'ubuntu-latest'

      - name: Run program on macOS
        run: |
          ./target/${{ matrix.target }}/release/ifstat-rs -V
          ./target/${{ matrix.target }}/release/ifstat-rs --version
          ./target/${{ matrix.target }}/release/ifstat-rs -a 0 1
        if: matrix.os == 'macos-latest'

      - name: Run program on Windows
        run: |
          target\${{ matrix.target }}\release\ifstat-rs.exe -V
          target\${{ matrix.target }}\release\ifstat-rs.exe --version
          target\${{ matrix.target }}\release\ifstat-rs.exe -a 0 1
        if: matrix.os == 'windows-latest'
